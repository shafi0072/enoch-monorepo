import React, { useCallback, useEffect, useRef, useState } from "react";
import { ToastContainer, toast } from "react-toastify";
import { useRouter } from "next/router";
import Modal from "react-modal";
import AboutEnoch from "../../../core/components/AboutEnoch";
import { AuthMethod } from "../../../../constants/authMethod";
import AuthClient from "../../../../services/AuthClient";
import { CHOOSE_2FA_METHOD_MUTATION } from "../../../../graphql/mutations/choose2FAMethod";
import BarcodeContainer from "./BarcodeContainer";
import { routes } from "../../../../constants/routes";
import ToastService from "../../../../services/ToastService";

const customStyles = {
  overlay: {
    backgroundColor: "rgba(0,0,0,0.8)",
  },
  content: {
    top: "50%",
    left: "50%",
    right: "auto",
    bottom: "auto",
    marginRight: "-50%",
    transform: "translate(-50%, -50%)",
  },
};

const ChooseAuthMethodComponent = () => {
  const router = useRouter();
  const [authMethod, setAuthMethod] = useState<AuthMethod | null>(null);
  const [barcode, setBarcode] = useState("");
  const [isBarcodeModalOpen, setIsBarcodeModalOpen] = useState(false);

  const next = useCallback(async () => {
    if (authMethod === null) {
      ToastService.error("Select an auth method");
    } else {
      const response = await AuthClient.mutation(CHOOSE_2FA_METHOD_MUTATION, {
        _2FAtype: authMethod,
      });

      setBarcode(response?.data?.chooseMethodfor2FA?.getqrcode);

      if (response?.errors) {
        ToastService.error(response?.errors[0].message);
      }

      if (response?.data?.chooseMethodfor2FA) {
        const { methodSelectedtype } = response?.data?.chooseMethodfor2FA;
        if (methodSelectedtype === AuthMethod.sms) {
          router.push(routes.requestSMSOTP);
        }
        if (methodSelectedtype === AuthMethod.smartPhone) {
          setIsBarcodeModalOpen(true);
        }
      }
    }
  }, [authMethod]);

  const closeModal = useCallback(() => {
    setIsBarcodeModalOpen(false);
  }, []);

  return (
    <>
      <section id="app-element">
        <Modal
          ariaHideApp={false}
          style={customStyles}
          isOpen={isBarcodeModalOpen}
          onRequestClose={closeModal}
        >
          <BarcodeContainer barcode={barcode} closeModal={closeModal} />
        </Modal>
        <div className="container-fluid">
          <div className="row">
            <div className="col-lg-6">
              <div className="dapp-signin-form">
                <AboutEnoch />
                <div id="auth-block">
                  <div
                    className={
                      authMethod === AuthMethod.smartPhone
                        ? "dapp-2f-auth-block auth-active"
                        : "dapp-2f-auth-block"
                    }
                    onClick={() => setAuthMethod(AuthMethod.smartPhone)}
                  >
                    <div className="auth-select">
                      <img
                        src="/images/auth-check.png"
                        alt="auth-check"
                        className="img-fluid"
                      />
                    </div>
                    <div className="dapp-2f-auth-block-lft">
                      <h3>
                        Smartphone app <span>Recommended</span>
                      </h3>
                      <p>
                        2FA code will be generated by your smartphone app
                        “Google Authenticator”, available for iOS, Andriod and
                        Windows phone.
                      </p>
                    </div>
                    <div className="dapp-2f-auth-block-right">
                      <img
                        src="/images/2f-img1.png"
                        alt="logo"
                        className="img-fluid"
                      />
                    </div>
                  </div>
                  <div
                    className={
                      authMethod === AuthMethod.sms
                        ? "dapp-2f-auth-block mab-32 auth-active"
                        : "dapp-2f-auth-block mab-32"
                    }
                    onClick={() => setAuthMethod(AuthMethod.sms)}
                  >
                    <div className="auth-select">
                      <img
                        src="/images/auth-check.png"
                        alt="auth-check"
                        className="img-fluid"
                      />
                    </div>
                    <div className="dapp-2f-auth-block-lft">
                      <h3>SMS/Phone Request</h3>
                      <p>
                        Sends 2FA code via SMS or Phone <br />
                        call.
                      </p>
                    </div>
                    <div className="dapp-2f-auth-block-right">
                      <img
                        src="/images/2f-img2.png"
                        alt="logo"
                        className="img-fluid"
                      />
                    </div>
                  </div>
                </div>
                <div className="mb-4">
                  <button
                    onClick={next}
                    type="submit"
                    className="bttn-primary req-nxt-btn"
                  >
                    Next
                  </button>
                </div>
              </div>
            </div>
            <div className="col-lg-6 p-0">
              <div className="sign-up-bg-image">
                <div>
                  <img
                    src="/images/signup.png"
                    alt="signup"
                    className="img-fluid"
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
        <ToastContainer />
      </section>
    </>
  );
};

export default ChooseAuthMethodComponent;
