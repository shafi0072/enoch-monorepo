version: "3.9"
services:
  auth-service:
    build:
      context: apps/be/auth-service
      dockerfile: Dockerfile.prod
    ports:
      - "3001:3001"
    environment:
      PORT: 3001
      PREFIX: auth
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/auth"
      JWT_SECRET: secret
      SALT_TO_ROUNDS: ${SALT_TO_ROUNDS}
      GENERATE_PASSKEY_SECRET: ${GENERATE_PASSKEY_SECRET}
    depends_on:
      - nats-dev
    networks:
      - app-network
  
  post-service:
    build:
      context: apps/be/post-service
      dockerfile: Dockerfile.prod
    ports:
      - "3009:3009"
    environment:
      PORT: 3009
      PREFIX: post
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/post"
      JWT_SECRET: secret
      SALT_TO_ROUNDS: ${SALT_TO_ROUNDS}
      GENERATE_PASSKEY_SECRET: ${GENERATE_PASSKEY_SECRET}
    depends_on:
      - nats-dev
    networks:
      - app-network

  front-web-service:
    build:
      context: apps/be/front-web-service
      dockerfile: Dockerfile.prod
    ports:
      - "3011:3011"
    environment:
      PORT: 3011
      PREFIX: front-web
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/front-web"
      JWT_SECRET: secret
      SALT_TO_ROUNDS: ${SALT_TO_ROUNDS}
      GENERATE_PASSKEY_SECRET: ${GENERATE_PASSKEY_SECRET}
    depends_on:
      - nats-dev
    networks:
      - app-network

  email-service:
    build:
      context: apps/be/email-service
      dockerfile: Dockerfile.prod
    ports:
      - "3002:3002"
    environment:
      PORT: 3002
      PREFIX: email
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/email"
      JWT_SECRET: secret
      SALT_TO_ROUNDS: ${SALT_TO_ROUNDS}
      EMAIL: ${EMAIL}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_SERVICE: ${EMAIL_SERVICE}
      FE_APP_URL: ${FE_APP_URL}
      
    depends_on:
      - nats-dev
    networks:
      - app-network

  file-service:
    build:
      context: apps/be/file-service
      dockerfile: Dockerfile.prod
    ports:
      - "3003:3003"
    environment:
      PORT: 3003
      PREFIX: file
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/file"
      JWT_SECRET: secret
      SALT_TO_ROUNDS: ${SALT_TO_ROUNDS}
    depends_on:
      - nats-dev
    networks:
      - app-network

  sms-service:
    build:
      context: apps/be/sms-service
      dockerfile: Dockerfile
    volumes:
      - ./apps/be/sms-service/src/:/app/src
    ports:
      - "3004:3004"
    environment:
      PORT: 3004
      PREFIX: sms
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/sms"
      JWT_SECRET: secret
      SALT_TO_ROUNDS: ${SALT_TO_ROUNDS}
      VONAGE_API_SECRETE_KEY: ${VONAGE_API_SECRETE_KEY}
      VONAGE_API_KEY: ${VONAGE_API_KEY}
      EXPIRY_MINUTES: ${EXPIRY_MINUTES}
      YOUR_VIRTUAL_NUMBER: ${YOUR_VIRTUAL_NUMBER}

    depends_on:
      - nats-dev
      - mongo
    networks:
      - app-network

  web3-service:
    env_file:
       - ./.env
    build:
      context: apps/be/web3-service
      dockerfile: Dockerfile
    ports:
      - "3005:3005"
    environment:
      PORT: 3005
      PREFIX: web3
      NODE_ENV: production
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/web3"

    depends_on:
      - mongo
    networks:
      - app-network        
    

  shop-service:
    env_file:
      - ./.env
    build:
      context: apps/be/shop-service
      dockerfile: Dockerfile
    ports:
      - "3006:3006"
    environment:
      PORT: 3006
      PREFIX: shop
      NODE_ENV: development
      MONGO_CONNECTION_URI: "${MONGO_CONNECTION_URI}/shop"

    depends_on:
      - nats-dev
      - mongo
    networks:
      - app-network

  enoch:
    build:
      context: apps/fe/enoch
      dockerfile: Dockerfile.prod
    ports:
      - "3000:3000"
    environment:
      PORT: 3000
      NODE_ENV: production
      NATS_CONNECTION_URL: nats://nats-dev:4222
      JWT_SECRET: secret
    networks:
      - app-network
  
  nats-dev:
    ports:
      - "4222:4222"
    image: nats-streaming:0.17.0
    networks:
      - app-network

  mongo:
    image: mongo
    #environment:
      #MONGO_INITDB_ROOT_USERNAME: root
      #MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - app-network

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_URL: ${MONGO_CONNECTION_URI}
    networks:
      - app-network

  nginx:
    image: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/config/nginx-prod.conf:/etc/nginx/conf.d/node.template
      - ./nginx/html:/etc/nginx//html
    command: 'bash -c "cat /etc/nginx/conf.d/node.template > /etc/nginx/conf.d/default.conf && nginx -g ''daemon off;''"'
    depends_on:
      - auth-service
      - post-service
      - front-web-service
      - email-service
      - file-service
      - enoch
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
